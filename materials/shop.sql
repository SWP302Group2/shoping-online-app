
IF NOT EXISTS (SELECT name FROM master.dbo.sysdatabases WHERE name = N'BESTTEAM')
	CREATE DATABASE BESTTEAM
	
USE BESTTEAM

---- ACCOUNT ROLE
CREATE TABLE ROLE_LIST (
	ROLE	INTEGER			PRIMARY KEY,	
	NAME	NVARCHAR(200)	NULL
)

INSERT	INTO ROLE_LIST (ROLE, NAME)
VALUES  (0, N'Default user'),
		(1, N'Admin'),
		(2, N'Super admin');

---- ACCOUNT STATUS
CREATE TABLE ACCOUNT_STATUS (
	STATUS_CODE	INTEGER			PRIMARY KEY,
	NAME		NVARCHAR(200)	NULL
)

INSERT	INTO ACCOUNT_STATUS
VALUES	(0, N'Inactive'),
		(1, N'Active'),
		(2, N'Banned');

SELECT * FROM ACCOUNT_STATUS

----ACCOUNT
CREATE TABLE ACCOUNT(
	USERID		INT	IDENTITY(1,1)	PRIMARY KEY,
	EMAIL		NVARCHAR(320)		UNIQUE NOT NULL,
	PASSWORD	NVARCHAR(20)		NOT NULL,
	PHONE		VARCHAR(100)		NOT NULL,
	LASTNAME	NVARCHAR(100)		NULL,
	FIRSTNAME	NVARCHAR(100)		NULL,
	BIRTHDAY	DATETIME			NULL,
	AVATAR		NVARCHAR(255)		NULL,
	ROLE		INTEGER				NOT NULL,
	STATUS_CODE	INTEGER				NOT NULL
)
ALTER TABLE ACCOUNT
ADD CONSTRAINT ACCOUNT_FK_ROLE	 FOREIGN KEY (ROLE) REFERENCES ROLE_LIST(ROLE),
	CONSTRAINT ACCOUNT_FK_STATUS FOREIGN KEY (STATUS_CODE) REFERENCES ACCOUNT_STATUS(STATUS_CODE);

--Demo account
INSERT INTO ACCOUNT(EMAIL, PASSWORD, LASTNAME, FIRSTNAME, BIRTHDAY, PHONE, AVATAR, ROLE, STATUS_CODE)
VALUES	('trong@gmail.com', '123456', N'Lê', N'Trọng','12/12/2012', '0900000000','/assets/images/default_avatar.png', 2, 1),
		('haianh@gmail.com', '123456', N'Nguyễn', N'Anh','12/12/2012', '0901111111','/assets/images/default_avatar.png', 1, 1),
		('phuong@gmail.com', '123456', N'Nguyễn', N'Phượng','12/12/2012', '0902222222','/assets/images/default_avatar.png', 0, 1);
		
SELECT* FROM ACCOUNT

----LOG
CREATE TABLE ACTION_LOG(
	USERID			INTEGER		NOT NULL,
	ACTION_TIME		DATE		NOT NULL,
	ACTION_INFOR	NTEXT		NULL,
)
ALTER TABLE ACTION_LOG
ADD CONSTRAINT ACTION_LOG_PK PRIMARY KEY (USERID, ACTION_TIME),
	CONSTRAINT ACTION_LOG_FK FOREIGN KEY (USERID) REFERENCES ACCOUNT(USERID); 

SELECT * FROM ACTION_LOG

-----------------SHOP---------------

----CATEGORY
CREATE TABLE CATEGORY (
	ID		VARCHAR(20)		PRIMARY KEY,
	NAME	NVARCHAR(100)	NOT NULL
)

INSERT	INTO CATEGORY (ID, NAME)
VALUES	('DK', N'Đồ uống'),
		('CL', N'Quần áo'),
		('FR', N'Trái cây');

SELECT * FROM CATEGORY

----PRODUCT_STATUS
CREATE TABLE PRODUCT_STATUS (
	CODE			INTEGER			PRIMARY KEY,
	NAME			NVARCHAR(100)	NULL,
	DESCRIPTION		NVARCHAR(500)	NULL
)

INSERT	INTO PRODUCT_STATUS(CODE, NAME, DESCRIPTION)
VALUES	(0, N'Not defined'	, N'Trạng thái sản phẩm được thêm vào, nhưng chưa treo bán.'),
		(1, N'Selling'		, N'Trạng thái sản phẩm đang được treo bán.'),
		(2, N'Sout out'		, N'Trạng thái sản phẩm đã bán hết, chờ nhập hàng.'),
		(3, N'Stop'			, N'Trạng thái sản phẩm đang bị ngưng bán, chờ xử lý.'),
		(4, N'Sale off'		, N'Trạng thái sản phẩm đang trong chương trình giảm giá');

SELECT * FROM PRODUCT_STATUS

---PRODUCT
CREATE TABLE PRODUCT (
	PRODUCT_ID			VARCHAR(100)	PRIMARY KEY,
	CATEGORY_ID			VARCHAR(20)		NOT NULL,
	PRODUCT_STATUS_CODE	INTEGER			NOT NULL,
	NAME				NVARCHAR(100)	NOT NULL,
	QUANTITY			INTEGER			NOT NULL,
	IMAGE				VARCHAR(250)	NULL,
	DESCRIPTION			NVARCHAR(200)	NULL
)
ALTER TABLE	PRODUCT	
ADD	CONSTRAINT PRODUCT_FK_STATUS   FOREIGN KEY (PRODUCT_STATUS_CODE) REFERENCES PRODUCT_STATUS(CODE),
	CONSTRAINT PRODUCT_FK_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(ID);

INSERT INTO PRODUCT(PRODUCT_ID, CATEGORY_ID, PRODUCT_STATUS_CODE, NAME, QUANTITY, IMAGE, DESCRIPTION)
VALUES	('001', 'DK', 1,N'Coca',	100, '/assets/images/default_image.png', N'Nước ngọt có ga'),
		('002', 'DK', 1,N'Pepsi',	700, '/assets/images/default_image.png', N'Nước ngọt có ga'),
		('003', 'DK', 1,N'String',  200, '/assets/images/default_image.png', N'Nước ngọt có ga'),
		('004', 'CL', 1,N'Áo thun', 300, '/assets/images/default_image.png', N'Làm từ 100% cotton'),
		('005', 'CL', 1,N'Áo ba lỗ',125, '/assets/images/default_image.png', N'Siêu thấm'),
		('006', 'CL', 1,N'Quần GAP',432, '/assets/images/default_image.png', N'Quần jeans nam'),
		('007', 'FR', 1,N'Táo',		20,  '/assets/images/default_image.png', N'Táo xanh'),
		('008', 'FR', 1,N'Cherry',	300, '/assets/images/default_image.png', N'Nhập từ Úc, mỗi hộp nữa ký'),
		('009', 'FR', 1,N'Ổi',		2000,'/assets/images/default_image.png', N'Ổi trắng thơm ngon'),
		('010', 'FR', 1,N'Xoài cát',1000,'/assets/images/default_image.png', N'Xoài cát Hòa Lộc');

SELECT * FROM PRODUCT

----PRICE_LIST
CREATE TABLE PRICE_LIST (
	PRODUCT_ID	VARCHAR(100)	NOT NULL,
	APPLY_DATE	DATETIME		NOT NULL,
	PRICE		FLOAT			NOT NULL,
	UNIT		NVARCHAR(100)	NOT NULL
)
ALTER TABLE PRICE_LIST
ADD	CONSTRAINT PRICE_LIST_PK PRIMARY KEY (PRODUCT_ID, APPLY_DATE),
	CONSTRAINT PRICE_LIST_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID);

INSERT	INTO PRICE_LIST(PRODUCT_ID, APPLY_DATE, PRICE, UNIT)
VALUES	('001', '2020-06-12', 10000,  N'Lon'),
		('002', '2020-09-12', 10000,  N'Lon'),
		('003', '2021-06-12', 10000,  N'Lon'),
		('004', '2020-06-22', 100000, N'Cái'),
		('005', '2020-06-22', 60000,  N'Cái'),
		('006', '2020-06-23', 400000, N'Cái'),
		('007', '2020-06-12', 50000,  N'Ký'),
		('008', '2020-06-12', 500000, N'Hộp'),
		('009', '2020-06-12', 50000,  N'Ký'),
		('010', '2020-06-12', 200000, N'Ký'),
		('010', '2021-07-12', 150000, N'Nữa Ký');

SELECT * FROM PRICE_LIST

----CART
CREATE TABLE CART (
	CART_ID	INTEGER	IDENTITY(1,1)	PRIMARY KEY,
	USERID	INTEGER					UNIQUE NOT NULL
)

ALTER TABLE CART
ADD CONSTRAINT CART_FK FOREIGN KEY (USERID) REFERENCES ACCOUNT(USERID);

SELECT * FROM CART

----CART DETAILS
CREATE TABLE CART_DETAIL(
	CART_ID		INTEGER			NOT NULL,
	PRODUCT_ID	VARCHAR(100)	NOT NULL,
	QUANTITY	INTEGER			NOT NULL,
)
ALTER TABLE CART_DETAIL
ADD CONSTRAINT CART_DETAIL_PK PRIMARY KEY (CART_ID, PRODUCT_ID),
	CONSTRAINT CART_DETAIL_FK_CART FOREIGN KEY (CART_ID) REFERENCES CART(CART_ID),
	CONSTRAINT CART_DETAIL_FK_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID);

SELECT * FROM CART_DETAIL

----PAYMENT METHOD
CREATE TABLE PAYMENT_METHOD (
	ID		INTEGER			PRIMARY KEY,
	NAME	NVARCHAR(200)	NULL,
)

INSERT	INTO PAYMENT_METHOD(ID, NAME)
VALUES	(1, N'Mobile payment'),
		(2, N'Credit card'),
		(3, N'Bank transfer'),
		(4, N'Paypal'),
		(5, N'Cash on delivery (COD)');

SELECT * FROM PAYMENT_METHOD

----PAYMENT STATUS
CREATE TABLE PAYMENT_STATUS(
	CODE		INTEGER			PRIMARY KEY,
	NAME		NVARCHAR(200)	NOT NULL
)

INSERT	INTO PAYMENT_STATUS(CODE, NAME)
VALUES	(1, N'Not paid yet'),
		(2, N'Paid');

SELECT * FROM PAYMENT_STATUS

----ORDER_STATUS
CREATE TABLE ORDER_STATUS (
	CODE	INTEGER			PRIMARY KEY,
	NAME	NVARCHAR(200)	NOT NULL
)

INSERT	INTO ORDER_STATUS
VALUES	(1, N'Đơn hàng chuẩn bị.'),
		(2, N'Đơn hàng đang chờ được giao.'),
		(3, N'Đơn hàng đang được giao.'),
		(4, N'Đơn hàng đã giao thành công.'),
		(5, N'Đơn hàng bị hủy');

SELECT * FROM ORDER_STATUS

----ORDERS
CREATE TABLE ORDERS(
	ORDER_ID			INTEGER				PRIMARY KEY,
	USERID				INTEGER				NOT NULL,
	BUY_TIME			DATETIME			NOT NULL,
	DELIVERY_ADDRESS	NVARCHAR(500)		NOT NULL,
	ORDER_STATUS_CODE	INTEGER				NOT NULL,
	PAYMENT_STATUS_CODE INTEGER				NOT NULL,
	PAYMENT_METHOD_ID	INTEGER				NOT NULL,	
	PHONE				VARCHAR(20)			NULL,
	BUYER_NAME			NVARCHAR(50)		NULL,
	RECEIVER_NAME		NVARCHAR(50)		NULL,
	SUBTOTAL			FLOAT				NULL
)

ALTER TABLE ORDERS 
ADD	CONSTRAINT ORDERS_UK UNIQUE (USERID, BUY_TIME),
	CONSTRAINT ORDERS_FK_CART			FOREIGN KEY (ORDER_ID)			  REFERENCES CART(CART_ID),
	CONSTRAINT ORDERS_FK_ACCOUNT		FOREIGN KEY (USERID)			  REFERENCES ACCOUNT(USERID),
	CONSTRAINT ORDERS_FK_PAYMENT_STATUS FOREIGN KEY (PAYMENT_STATUS_CODE) REFERENCES PAYMENT_STATUS(CODE),
	CONSTRAINT ORDERS_FK_PAYMENT_METHOD FOREIGN KEY (PAYMENT_METHOD_ID)	  REFERENCES PAYMENT_METHOD(ID),
	CONSTRAINT ORDERS_FK_ORDER_STATUS	FOREIGN KEY (ORDER_STATUS_CODE)   REFERENCES ORDER_STATUS(CODE);

SELECT * FROM ORDERS

----ORDER_DETAIL 
CREATE TABLE ORDER_DETAIL(
	ORDER_ID	INTEGER			NOT NULL,
	PRODUCT_ID	VARCHAR(100)	NOT NULL,
	NAME		NVARCHAR(100)	NOT NULL,
	QUANTITY	INTEGER			NOT NULL,
	PRICE		FLOAT			NOT NULL,
	TOTAL		FLOAT			NULL
)

ALTER TABLE ORDER_DETAIL
ADD CONSTRAINT ORDER_DETAIL_PK	PRIMARY KEY (ORDER_ID, PRODUCT_ID),
	CONSTRAINT ORDER_DETAIL_FK_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID),
	CONSTRAINT ORDER_DETAIL_FK_ORDERS FOREIGN KEY (ORDER_ID)	REFERENCES ORDERS(ORDER_ID);

SELECT * FROM ORDER_DETAIL


--DECLARE @CART_ID AS INTEGER
--SELECT @CART_ID = CART_ID FROM CART (NOLOCK) WHERE USERID = ?
--IF @CART_ID IS NULL
--BEGIN
	--SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
	--BEGIN TRANSACTION
--		SELECT @CART_ID = CART_ID FROM CART (NOLOCK) WHERE USERID = ?
	--	IF @CART_ID IS NULL
		--BEGIN
			--INSERT INTO CART(CART_ID, USERID) VALUES (?,?)
--		END
	--COMMIT TRANSACTION
--END